{
  "Commands": [
    {
      "Name": "Backup Sheets in Workbook",
      "Description": "Copy all sheets in workbook for backup",
      "Type": "VBAMacroCommand",
      "LaunchCodes": [
        "BU"
      ],
      "MacroExpression": "modCaseSetup.Backup()",
      "Tags": [
        "Prep"
      ],
      "MacroWorkbookConnection": "ThisWorkbook"
    },
    {
      "Name": "Clear Lambdas",
      "Description": "Clear lambdas that aren't in Lambdas table - for Comp Bot maintenance",
      "Type": "VBAMacroCommand",
      "LaunchCodes": [
        "CL"
      ],
      "MacroExpression": "modLambdas.ClearLambdas()",
      "Tags": [
        "Maintenance"
      ]
    },
    {
      "Name": "Create Blank Sheet",
      "Description": "Creates a blank sheet named based on cell value (Sht otherwise)",
      "Type": "VBAMacroCommand",
      "LaunchCodes": [
        "BS",
        "CBS",
        "S"
      ],
      "MacroExpression": "modMisc.CreateBlankSheet([[ActiveCell]])",
      "Tags": [
        "Prep"
      ],
      "MacroWorkbookConnection": "ThisWorkbook"
    },
    {
      "Name": "Create Bonus Sheet",
      "Description": "Creates bonus sheet \"B\" with bonus questions",
      "Type": "VBAMacroCommand",
      "LaunchCodes": [
        "CB",
        "CBS"
      ],
      "MacroExpression": "modCaseSetup.CreateBonusSheet()",
      "Tags": [
        "Prep"
      ]
    },
    {
      "Name": "Create Case Inputs Sheet",
      "Description": "Creates a case inputs sheet with the inputs for the current case",
      "Type": "VBAMacroCommand",
      "LaunchCodes": [
        "CIS",
        "IS"
      ],
      "MacroExpression": "modCaseSetup.CreateCaseInputsSheet([[ActiveCell]])",
      "Tags": [
        "Prep"
      ],
      "MacroWorkbookConnection": "ThisWorkbook"
    },
    {
      "Name": "Create Data Table",
      "Description": "Creates a data table on the current sheet for level sheets \"L#\" or active cell = \"Example#\"",
      "Type": "VBAMacroCommand",
      "LaunchCodes": [
        "CDT",
        "DT"
      ],
      "MacroExpression": "modCaseSetup.CreateDataTable([[NewTableTargetToRight]])",
      "Tags": [
        "Prep"
      ]
    },
    {
      "Name": "Create Level Sheets",
      "Description": "Creates a sheet for each level in the Case sheet",
      "Type": "VBAMacroCommand",
      "LaunchCodes": [
        "CL",
        "CLS"
      ],
      "MacroExpression": "modCaseSetup.CreateLevelSheets()",
      "Tags": [
        "Prep"
      ]
    },
    {
      "Name": "Default Settings",
      "Description": "Updates default settings to those in Default Settings sheet",
      "Type": "VBAMacroCommand",
      "LaunchCodes": [
        "DS"
      ],
      "MacroExpression": "modMisc.DefaultSettings()",
      "Tags": [
        "Settings"
      ]
    },
    {
      "Name": "Goto Similar Background Color",
      "Description": "Goto similar background color.",
      "Type": "VBAMacroCommand",
      "LaunchCodes": [
        "SBC"
      ],
      "MacroExpression": "modGoToSpecial.GotoSimilarBackgroundColor()",
      "Tags": [
        "GoTo"
      ]
    },
    {
      "Name": "Import Lambda Library",
      "Description": "Imports CompBot's lambda collection into active workbook",
      "Type": "VBAMacroCommand",
      "LaunchCodes": [
        "IL"
      ],
      "MacroExpression": "modImportLambdas.ImportAllLambdas(\"CompBot.xlsm\")",
      "Tags": [
        "LAMBDA",
        "Prep"
      ],
      "MacroWorkbookConnection": "Lambda Robot"
    },
    {
      "Name": "Import Lambdas From",
      "Description": "Import lambdas from a specified workbook",
      "Type": "VBAMacroCommand",
      "LaunchCodes": [
        "ILF"
      ],
      "MacroExpression": "modLambdas.ImportLambdasFrom()",
      "Tags": [
        "LAMBDA",
        "Prep"
      ]
    },
    {
      "Name": "Name All Used Ranges",
      "Description": "Renames used range in all sheets",
      "Type": "VBAMacroCommand",
      "LaunchCodes": [
        "NA",
        "NAUR"
      ],
      "MacroExpression": "modNames.NameAllUsedRanges()",
      "Tags": [
        "Name"
      ]
    },
    {
      "Name": "Name Used Ranges",
      "Description": "Names used range in all sheets starting with the prefix as provided in the active cell",
      "Type": "VBAMacroCommand",
      "LaunchCodes": [
        "NURS"
      ],
      "MacroExpression": "modNames.NameUsedRanges([[ActiveCell]])",
      "Tags": [
        "Name"
      ]
    },
    {
      "Name": "Save Answers To Left",
      "Description": "Saves references to the selected cells in the green answer cells to the left on the same row.",
      "Type": "VBAMacroCommand",
      "LaunchCodes": [
        "SAL"
      ],
      "MacroExpression": "modCaseSetup.SaveAnswersToLeft()",
      "Tags": [
        "Paste"
      ]
    },
    {
      "Name": "Save Copy of File",
      "Description": "Enable editing and save copy of file with suffix based on active cell (otherwise Working)",
      "Type": "VBAMacroCommand",
      "LaunchCodes": [
        "SA"
      ],
      "MacroExpression": "modCaseSetup.SaveCopy([[ActiveCell]])",
      "Tags": [
        "Prep"
      ]
    },
    {
      "Name": "Setup Case",
      "Description": "Setup case by running Backup and Level sheet creation",
      "Type": "VBAMacroCommand",
      "LaunchCodes": [
        "SC"
      ],
      "MacroExpression": "modCaseSetup.Setup()",
      "Tags": [
        "Prep"
      ]
    },
    {
      "Name": "Toggle Calculation Mode",
      "Description": "Toggles calculation mode and places current mode notice in StatusBar",
      "Type": "VBAMacroCommand",
      "LaunchCodes": [
        "TC"
      ],
      "MacroExpression": "modMisc.ToggleCalculationMode()",
      "Tags": [
        "Settings"
      ]
    },
    {
      "Name": "Toggle Iterative Calculation",
      "Description": "Toggles iterative calculation and sets status in status bar",
      "Type": "VBAMacroCommand",
      "LaunchCodes": [
        "IC"
      ],
      "MacroExpression": "modMisc.ToggleIterativeCalculation()",
      "Tags": [
        "Settings"
      ]
    }
  ]
}